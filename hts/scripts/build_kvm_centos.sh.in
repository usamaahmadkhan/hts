#!/bin/bash

#This script will configure/install all tools/packages/dependencies required to
#execute Thunder-KVM test plan
#usage:
# bash build_kvm.sh

. @PROJECT_SOURCE_DIR@/build/scripts/bash_helpers.sh
. @PROJECT_SOURCE_DIR@/build/scripts/log_helpers.sh
. @PROJECT_SOURCE_DIR@/build/scripts/kvm-config

tryexec sudo chown -R $USER:$USER /opt/*
MAKE_JOBS=$(getconf _NPROCESSORS_ONLN)
arch=$(uname -m)
log "Host architecture is $arch"

#Installing/configuring QEMU
log "Installing/configuring QEMU"
tryexec sudo yum install qemu -y
tryexec sudo yum install qemu-kvm -y

log "Installing virt-manager"
tryexec sudo yum install virt-manager -y

#Installing libvirt
log "Installing libvirt"
tryexec sudo yum install libvirt libvirt-python libvirt-client virt-install virt-viewer bridge-utils -y

#Installing benchmarking tools in host machine
log "installing benchmarking tools"
tryexec mkdir "/opt/hts/iozone-src"
tryexec pushd "/opt/hts/iozone-src" &> /dev/null
tryexec wget http://www.iozone.org/src/current/iozone3_465.tar
tryexec tar -xvf iozone*.tar
tryexec pushd iozone*/src/current &> /dev/null
if [ "$arch" == "aarch64" ];then
    tryexec make linux-arm
else
    tryexec make linux-AMD64
fi
tryexec sudo cp iozone /usr/bin/
tryexec popd &> /dev/null
tryexec popd &> /dev/null
tryexec sudo yum install iperf -y
tryexec sudo yum install sshpass -y
tryexec sudo yum install fio -y

#Installing python-pip
log "Installing python pip"
tryexec sudo yum install python-pip -y

#Installing pip packages
log "Installing pip packages"
for i in "${pip_dependencies[@]}"
do
   tryexec sudo pip install $i
done

#Configuring guest for qemu-guest-agent
log "Configuring qemu-guest-agent on host machine"
#tryexec sudo bash @PROJECT_SOURCE_DIR@/build/scripts/conf_qemu_agent.sh
sudo yum install qemu-guest-agent -y

#Installing some helper packages for arm arch
if [ "$arch" == "aarch64" ];then
    tryexec sudo yum install qemu-img AAVMF -y
    sudo sed -i '/#user = "root"/c\user = "root"' /etc/libvirt/qemu.conf
    sudo sed -i '/#group = "root"/c\group = "root"' /etc/libvirt/qemu.conf
fi

#Restarting libvirt service
log "Restarting libvirt service"
tryexec sudo service libvirtd restart
tryexec sudo service virtlogd restart
state=`sudo virsh net-list | grep default | awk '{print $2}'`
if [[ "$state" !=  "active" ]];then
    sudo virsh net-start default
fi

#Enable IPV4 forwarding
tryexec sudo sysctl -w net.ipv4.ip_forward=1

#Installing LTP on host
log "Installing ltp on host"
bash @PROJECT_SOURCE_DIR@/build/scripts/install_ltp.sh
